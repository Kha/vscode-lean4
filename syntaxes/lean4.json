{
  "name": "Lean 4",
  "scopeName": "source.lean",
  "fileTypes": ["lean"],
  "patterns": [
    { "include": "#comments" },
    { "match": "\\b(Prop|Type|Sort)\\b", "name": "storage.type.lean" },
    { "match": "\\battribute\\b\\s*\\[[^\\]]*\\]", "name": "storage.modifier.lean" },
    { "match": "@\\[[^\\]]*\\]", "name": "storage.modifier.lean" },
    {
      "match": "\\b(?<!\\.)(partial|unsafe|private|protected)(?!\\.)\\b",
      "name": "storage.modifier.lean"
    },
    { "match": "\\bsorry\\b", "name": "invalid.illegal.lean" },
    { "match": "#(print|eval|reduce|check|check_failure)\\b", "name": "keyword.other.lean" },
    {
      "match": "\\b(?<!\\.)(theorem|def|class|structure|instance|set_option|example|inductive|coinductive|axiom|constant|universe|universes|variable|variables|import|open|export|theory|prelude|renaming|hiding|exposing|do|by|let|extends|mutual|mut|where|rec|syntax|macro_rules|macro|deriving|fun|section|namespace|end|infix|infixl|infixr|postfix|prefix|notation|abbrev|if|then|else|calc|match|with|for|in|unless|try|catch|finally|return|continue|break)(?!\\.)\\b",
      "name": "keyword.other.lean"
    },
    { "begin": "«", "end": "»", "contentName": "entity.name.lean" },
    {
      "begin": "\"", "end": "\"",
      "name": "string.quoted.double.lean",
      "patterns": [
        { "match": "\\\\[\\\\\"ntr']", "name": "constant.character.escape.lean" },
        { "match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]", "name": "constant.character.escape.lean" },
        { "match": "\\\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]", "name": "constant.character.escape.lean" }
      ]
    },
    { "name": "constant.language.lean", "match": "\\b(true|false)\\b" },
    { "name": "constant.character.lean", "match": "'[^\\\\']'" },
    { "name": "constant.character.lean", "match": "'(\\\\(x[0-9A-Fa-f][0-9A-Fa-f]|u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]|.))'",
      "captures": { "1": { "name": "constant.character.escape.lean" } } },
    { "match": "`+[^\\[(]\\S+", "name": "entity.name.lean" },
    { "match": "\\b([0-9]+|0([xX][0-9a-fA-F]+)|[-]?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?)\\b", "name": "constant.numeric.lean" }
  ],
  "repository": {
    "dashComment": {
      "begin": "--", "end": "$",
      "name": "comment.line.double-dash.lean",
      "patterns": [
        { "include": "source.lean.markdown" }
      ]
    },
    "docComment": {
      "begin": "/--", "end": "-/", "name": "comment.block.documentation.lean",
      "patterns": [
        { "include": "source.lean.markdown" },
        { "include": "#blockComment" }
      ]
    },
    "modDocComment": {
      "begin": "/-!", "end": "-/", "name": "comment.block.documentation.lean",
      "patterns": [
        { "include": "source.lean.markdown" },
        { "include": "#blockComment" }
      ]
    },
    "blockComment": {
      "begin": "/-", "end": "-/", "name": "comment.block.lean",
      "patterns": [
        { "include": "source.lean.markdown" },
        { "include": "#blockComment" }
      ]
    },
    "comments": {
      "patterns": [
        { "include": "#dashComment" },
        { "include": "#docComment" },
        { "include": "#stringBlock" },
        { "include": "#modDocComment" },
        { "include": "#blockComment" }
      ]
    }
  }
}
